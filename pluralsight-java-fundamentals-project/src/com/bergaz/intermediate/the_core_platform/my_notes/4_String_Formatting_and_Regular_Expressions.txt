Section Overview
    -Moving beyond string concatenation
    -StringJoiner class
    -Creating string with format specifiers
    -Regular expressions
    -String class support for regular expressions
    -Regular expression classes

More Powerful Solutions to Creating String Representations

The need for more powerful string creation
    -Concatenating string is often not enough
    Very focused on creating details
    Numeric conversions awkward
    -StringBuilder has the same issue

Options for more powerful string creation
    -StringJoiner:Simplifies joining a sequence of values
    -String formatting:Can specify desired appearance without dealing with
    creation details

StringJoiner
    -StringJoiner has a specific purpose, simplify composing a string
    comprised of a sequence of values

How it works
    Construct the StringJoiner
    Specify string to separate values
    *Optionally specify start/end string
    Add values
    Retrieve result

StringJoiner can handle edge case like single element printing with
separator, start, and end string

StringJoiner cases:
    When only one value added
    -With separator only:returns the added value
    -With start/end:returns added value within start/end
    When no value added
    -With separator only:returns empty string
    -With start/end:returns start/end only

We can customize empty handling:
-Specified with setEmptyValue method
-Used only when add method not called

Constructing Strings with Format Specifiers

Format specifiers
    -Focus is on describing the desired result not concerned with how
    -Can control many aspects of appearance
        *Positioning
        *Decimal places
        *Representations
    -Some methods support format specifiers
        String.format
        System.out.printf
        Formatter.format

*Default float printing displays 6 digits after dot

Format Specifier Structure

%d
%:Format specifier start
d:Conversion

%.1f
%:Format specifier start
.1:Precision
f:Conversion

%[argument index][flags][width][precision]conversion

"%conversion" is the minimum requirement to display some value
[width]:Minimum characters to display, space padded , right justified by default
[precision]:Decimal place to display

Symbol  Type            Example Value   Result
d       Integral        32              32
o       Integral        32              40
x X     Integral        32              20
f       Floating Point  123.0           123.000000
e E     Floating Point  123.0           1.230000e+02
s       General         "Hello"         Hello

When we use %s formatting a class:
-implements Formattable case:Return value of format method
-Other classes:Return value of toString method

Format Flags
Flag        Meaning
#           Include radix
0           Zero-padding
-           Left justify
,           Including grouping separator
space       Leave space for positive numbers
+           Always show sign
(           Enclose negative values in parenthesis

Argument Index
Index           Meaning
Not specified   Corresponds sequentially to argument
$index          Index of argument to use
<               Corresponds to same argument as previous format specifier


Writing Formatted Content to a Stream
Formatter Class
    -Provides formatting capabilities
    -Writes content to any type that implements Appendable interface

Appendable interface implementing classes
    -StringBuilder
    -Writer

String Matching with Regular Expression
    Regular Expression:A powerful pattern matching syntax
    Java support regex

String Class Support for Regex
    -replaceFirst:return a new updated string
    -replaceAll:return a new updated string
    -split:split string into an array
    -match:identifies if string matches the pattern

Dedicated Regular Expression Classes

Regular expression considerations
    -Compilation is processing intensive
    -String methods repeat compilation on every use

Pattern class
    -Compiles a regular expression
    -Factory for Matcher class instances

Matcher class
    -Applies compiled expression to a string


SUMMARY

StringJoiner
    -Simplifies combining sequence of values
    -Construct with values separator, optionally start/end string
    -Add the values and retrieve string
    -Can specify special value for empty (no values are added)

Format Specifiers
    -Focus on describing the desired result
    -Parts of a specifier
        - % (required)
        - Conversion (required)
        - Precision
        - Flags
        - Argument index

String and formatter classes supports format specifiers
Formatter class writes formatted content to any class that implements Appendable interface

Regex
    -Powerful string matching

    String support
    -replaceAll
    -split
    -match

    Dedicated class
        Pattern:Compiles regex
        Matcher:Applies pattern to string

